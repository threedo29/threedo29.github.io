<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Do Do Do</title>
    <link>https://threedo29.github.io/</link>
    <description>Recent content on Do Do Do</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Sun, 21 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://threedo29.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>동기식 시리얼 통신 프로토콜1</title>
      <link>https://threedo29.github.io/posts/synchronous-serial-protocol1/</link>
      <pubDate>Sun, 21 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://threedo29.github.io/posts/synchronous-serial-protocol1/</guid>
      <description>동기식 시리얼 통신 프로토콜 ① - SPI 동기식 시리얼 통신 사용 효과 비동기식 시리얼 통신의 주요 문제점 : 비동기식 시리얼 통신은 clock 신호를 사용하지 않기 때문에 통신 장치 간의 baud rate mismatch를 방지하기 위해서 데이터 패킷에 동기화 비트를 추가하게 된다. → 결국 1byte를 전송할 때마다 start/stop bit가 생성되고 전송시 마다 sync를 맞춰야 하므로 오</description>
    </item>
    
    <item>
      <title>비동기식 시리얼 프로토콜</title>
      <link>https://threedo29.github.io/posts/asynchronous-serial-protocol/</link>
      <pubDate>Sat, 20 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://threedo29.github.io/posts/asynchronous-serial-protocol/</guid>
      <description>비동기식 시리얼 프로토콜 (UART) Baud Rate (통신 속도) 시리얼 라인으로 전송되는 데이터 속도를 의미 bps(bits per second) 단위로 표시 baud rate를 통해 1bit 데이터가 전송되는데 필요한 시간을 알 수 있다. : 1bit 데이터를 전송할 때 시리얼 라인을 high 또는 low 값으로 유지하는 시간(전송) 즉, 데이터를 받기 위해 시리얼 라인을 체크하는 시간(수신) baud rate 값이 높을수록 전송/수신 속도</description>
    </item>
    
    <item>
      <title>시리얼 인터페이스의 종류</title>
      <link>https://threedo29.github.io/posts/kind-of-serial-interface/</link>
      <pubDate>Fri, 19 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://threedo29.github.io/posts/kind-of-serial-interface/</guid>
      <description>시리얼 인터페이스의 종류 (동기식/비동기식) 동기식(Synchronous) 시리얼 인터페이스 데이터 라인(Data Line)의 동작을 클럭 시그널(Clock Signal)의 동작과 동기화(같은 타이밍에 동작)시킨다. 시리얼 버스에 함께 연결된 장치들이 이 클럭 신호를 공유하게 되어 모두 신호에 맞춰 동작하게 된다. (두 대의 송수</description>
    </item>
    
    <item>
      <title>MCU 통신</title>
      <link>https://threedo29.github.io/posts/serial-communication/</link>
      <pubDate>Thu, 18 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://threedo29.github.io/posts/serial-communication/</guid>
      <description>MCU 통신 임베디드 시스템은 각종 프로세서와 회로들 간에 서로 데이터를 주고 받는 통신을 필수적으로 하게 된다. 통신을 위한 표준 프로토콜이 존재하고 크게 두 종류로 나눌 수 있다. Parallel(병렬) 통신 그림 1 병렬 통신 방식 데이터 전송을 다수의 비트로 한 번에 전송하는 방법 타이밍(Clock)에 맞춰 모든 라인이 같이 동작하여 데이터를 전송할 수</description>
    </item>
    
  </channel>
</rss>
