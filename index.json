[{"categories":"Embedded","contents":"시리얼 인터페이스의 종류 (동기식/비동기식) 동기식(Synchronous) 시리얼 인터페이스  데이터 라인(Data Line)의 동작을 클럭 시그널(Clock Signal)의 동작과 동기화(같은 타이밍에 동작)시킨다. 시리얼 버스에 함께 연결된 장치들이 이 클럭 신호를 공유하게 되어 모두 신호에 맞춰 동작하게 된다. (두 대의 송수신 시스템이 통신과정에서 시차가 달라 데이터를 잘못 해석할 가능성을 방지) 통신에 관여하는 주체들 간에 주종 관계가 존재 (master : 통신의 주도권을 가지는 주체, slave : 통신에서 종속적인 주체) 따라서 master가 출력하는 클럭 신호에만 반응할 수 있으므로 송수신과 상관 없이 master가 통신을 주도 (보통 프로세서 : master, 주변장치 : slave) 장점 : 직관적이다, 전송효율과 전송속도가 높다. 단점 : 클럭 신호를 위한 하나의 라인을 더 필요로 한다.  비동기식(Asynchronous) 시리얼 인터페이스  데이터가 외부 클럭 시그널(external clock signal)의 도움 없이 동작하는 것을 의미 대신 클럭 신호 없이 데이터를 안정적으로 전송, 수신할 수 있는 방법이 추가된다.\n→ 하나의 글자를 나타내는 코드의 전후에 start bit 와 stop bit 를 넣어 블록의 동기화를 취해준다. 일반적으로 시리얼 통신이라 부르는 것들 대부분 비동기 시리얼 통신을 사용 장점 :  비동기 통신은 클럭 신호를 위한 라인을 필요로 하지 않는다. 송신용 선과 수신용 선 두 가닥만 존재하여 두 주체가 동시에 데이터를 주고 받는 양방향 통신인 전이중(full duplex)통신 이 가능하다. 통신에 참여하는 두 주체가 서로 대등한 관계에서 일대일 통신 : 양쪽 모두 원하는 때에 언제든지 데이터를 보낼 수 있다.   단점 : 추가된 start bit와 stop bit로 인해 필요한 데이터만 연속적으로 보낼 수 없고 적어도 10bit 이상 길이의 패킷을 전송해야 하므로 효율이 떨어진다.  표 1 동기식 전송과 비동기식 전송 비교\n","permalink":"https://threedo29.github.io/posts/kind-of-serial-interface/","tags":null,"title":"시리얼 인터페이스의 종류"},{"categories":"Embedded","contents":"MCU 통신  임베디드 시스템은 각종 프로세서와 회로들 간에 서로 데이터를 주고 받는 통신을 필수적으로 하게 된다. 통신을 위한 표준 프로토콜이 존재하고 크게 두 종류로 나눌 수 있다.  Parallel(병렬) 통신  데이터 전송을 다수의 비트로 한 번에 전송하는 방법 타이밍(Clock)에 맞춰 모든 라인이 같이 동작하여 데이터를 전송할 수 있도록 Clock(CLK)라인이 추가된다. (8 bit data bus의 경우 9라인이 사용) 장점 : 빠르다, 구현이 쉽다. 단점 : input / output 라인을 많이 소요하게 된다.  Serial(직렬) 통신  데이터를 직렬화하여 한 주기에 한 비트 씩을 전송하는 방법 Clock 라인을 포함하여 2개 라인을 사용하여 데이터 전송 장점 : input / output 라인을 아낄 수 있다. -\u0026gt; MCU에서 과도한 포트 사용을 지양해야 하므로 Serial 방식 사용 단점 : 속도가 느리다.  ","permalink":"https://threedo29.github.io/posts/serial-communication/","tags":null,"title":"MCU 통신"}]