<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Embedded on Do Do Do</title>
    <link>https://threedo29.github.io/categories/embedded/</link>
    <description>Recent content in Embedded on Do Do Do</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Fri, 19 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://threedo29.github.io/categories/embedded/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>시리얼 인터페이스의 종류</title>
      <link>https://threedo29.github.io/posts/kind-of-serial-interface/</link>
      <pubDate>Fri, 19 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://threedo29.github.io/posts/kind-of-serial-interface/</guid>
      <description>시리얼 인터페이스의 종류 (동기식/비동기식) 동기식(Synchronous) 시리얼 인터페이스 데이터 라인(Data Line)의 동작을 클럭 시그널(Clock Signal)의 동작과 동기화(같은 타이밍에 동작)시킨다. 시리얼 버스에 함께 연결된 장치들이 이 클럭 신호를 공유하게 되어 모두 신호에 맞춰 동작하게 된다. (두 대의 송수</description>
    </item>
    
    <item>
      <title>MCU 통신</title>
      <link>https://threedo29.github.io/posts/serial-communication/</link>
      <pubDate>Thu, 18 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://threedo29.github.io/posts/serial-communication/</guid>
      <description>MCU 통신 임베디드 시스템은 각종 프로세서와 회로들 간에 서로 데이터를 주고 받는 통신을 필수적으로 하게 된다. 통신을 위한 표준 프로토콜이 존재하고 크게 두 종류로 나눌 수 있다. Parallel(병렬) 통신 데이터 전송을 다수의 비트로 한 번에 전송하는 방법 타이밍(Clock)에 맞춰 모든 라인이 같이 동작하여 데이터를 전송할 수 있도록 Clock(</description>
    </item>
    
  </channel>
</rss>
